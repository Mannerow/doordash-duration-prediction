name: CI_TESTS
on:
  # Triggered on any pull request to main
  pull_request:
    branches:
      - main
    paths:
      - '**'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Setup Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      # Python Cache, reuses dependencies if they haven't changed
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/Pipfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        working-directory: '.'
        run: make setup

      - name: Run Unit tests
        working-directory: "."
        run: make test

      - name: Run Quality tests
        working-directory: '.'
        run: make quality_checks

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Run Integration tests
        working-directory: '.'
        run: make integration_test

  tf-plan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        working-directory: './infrastructure'
        run: terraform init -reconfigure

      - name: Load Environment Variables from .env
      run: |
        set -o allexport
        source .env
        set +o allexport

      - name: Terraform Plan
        id: plan
        working-directory: './infrastructure'
        run: terraform plan -input=false